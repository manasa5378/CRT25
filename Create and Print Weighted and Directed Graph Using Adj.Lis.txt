Create and Print Weighted and Directed Graph Using Adj.List :

def addNode(v):
    if v in graph:
        print(v,"is already available")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addEdge(node1,node2,w):
    if node1 not in graph:
        print("node1 is not available")
    elif node2 not in graph:
        print("node2 is not available")
    else:
        graph[node1].append((node2,w))
graph={}
while True:
    print()
    print("1.Add Node\n2.Add Edge\n3.Show\n4.Exit")
    ch=int(input("Choice: "))
    if ch==1:
        v=input("Enter Node: ")
        addNode(v)
    elif ch==2:
        node1=input("Node1: ")
        node2=input("Node2: ")
        w=int(input("weight: "))
        addEdge(node1,node2,w)
    elif ch==3:
        show()
    elif ch==4:
        exit
    else:
        print("Invalid Choice")
        
Output:

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: A

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: B

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: C

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: D

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: A
Node2: B
weight: 11

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: B
Node2: C
weight: 4

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: C
Node2: D
weight: 5

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: D
Node2: A
weight: 7

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 3
A : [('B', 11)]
B : [('C', 4)]
C : [('D', 5)]
D : [('A', 7)]