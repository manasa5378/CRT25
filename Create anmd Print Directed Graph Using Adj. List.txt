Create anmd Print Directed Graph Using Adj. List:

def addNode(v):
    if v in graph:
        print(v,"is already available")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
def addEdge(node1,node2):
    if node1 not in graph:
        print("node1 is not available")
    elif node2 not in graph:
        print("node2 is not available")
    else:
        graph[node1].append(node2)

graph={}
while True:
    print()
    print("1.Add Node\n2.Add Edge\n3.Show\n4.Exit")
    ch=int(input("Choice: "))
    if ch==1:
        v=input("Enter Node: ")
        addNode(v)
    elif ch==2:
        node1=input("Node1: ")
        node2=input("Node2: ")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        exit
    else:
        print("Invalid Choice")
        

Output:

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: A

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: B

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: C

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: D

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: E

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: F

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 1
Enter Node: G

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: A
Node2: B

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: B
Node2: E

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: A
Node2: C

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: B
Node2: D

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: G
Node2: D

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: F
Node2: G

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 2
Node1: F
Node2: C

1.Add Node
2.Add Edge
3.Show
4.Exit
Choice: 3
A : ['B', 'C']
B : ['E', 'D']
C : []
D : []
E : []
F : ['G', 'C']
G : ['D']